# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: ci
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-10.15]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==1.8.0
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_SKIP: "cp27-* pp27-* cp35-*"  # skip Python 2.7 and 3.5 wheels
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
  run_main:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
    - run: cmake .
    - run: make stim
    - run: echo -e "H 0 \n CNOT 0 1 \n M 0 1" | out/stim --sample
  benchmark_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - uses: microsoft/setup-msbuild@v1.0.2
      - run: cmake .
      - run: MSBuild.exe stim_benchmark.vcxproj /p:Configuration=Release /p:OutDir=msbuild_out /p:O=2
      - run: msbuild_out/stim_benchmark.exe
  benchmark:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        simd_width: [64, 128, 256]
    steps:
    - uses: actions/checkout@v1
    - run: cmake . -DSIMD_WIDTH=${{ matrix.simd_width }}
    - run: make stim_benchmark
    - run: out/stim_benchmark
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        simd_width: [64, 128, 256]
    steps:
    - uses: actions/checkout@v1
    - run: |
        cd ..
        git clone https://github.com/google/googletest.git -b release-1.10.0
        mkdir googletest/build && cd googletest/build
        cmake .. -DBUILD_GMOCK=OFF
        make
        sudo make install
    - run: cmake . -DSIMD_WIDTH=${{ matrix.simd_width }}
    - run: make stim_test
    - run: out/stim_test
  test_o3:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
    - run: |
        cd ..
        git clone https://github.com/google/googletest.git -b release-1.10.0
        mkdir googletest/build && cd googletest/build
        cmake .. -DBUILD_GMOCK=OFF
        make
        sudo make install
    - run: cmake . -DSIMD_WIDTH=256
    - run: make stim_test_o3
    - run: out/stim_test_o3
  test_pybind:
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.6'
          architecture: 'x64'
      - run: pip install -e .
      - run: pip install pytest
      - run: pytest src
  test_stimcirq:
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.6'
          architecture: 'x64'
      - run: pip install -e .
      - run: pip install -e glue/cirq
      - run: pip install pytest
      - run: pytest glue/cirq
